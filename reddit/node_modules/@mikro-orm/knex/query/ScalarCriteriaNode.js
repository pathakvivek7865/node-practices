"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScalarCriteriaNode = void 0;
const core_1 = require("@mikro-orm/core");
const CriteriaNode_1 = require("./CriteriaNode");
class ScalarCriteriaNode extends CriteriaNode_1.CriteriaNode {
    process(qb, alias) {
        if (this.shouldJoin()) {
            const nestedAlias = qb.getAliasForJoinPath(this.getPath()) || qb.getNextAlias();
            const field = `${alias}.${this.prop.name}`;
            if (this.prop.reference === core_1.ReferenceType.MANY_TO_MANY) {
                qb.join(field, nestedAlias, undefined, 'pivotJoin', this.getPath());
            }
            else {
                qb.join(field, nestedAlias, undefined, 'leftJoin', this.getPath());
            }
            if (this.prop.reference === core_1.ReferenceType.ONE_TO_ONE) {
                qb.addSelect(field);
            }
        }
        return this.payload;
    }
    shouldJoin() {
        if (!this.parent || !this.prop || [core_1.ReferenceType.SCALAR, core_1.ReferenceType.ONE_TO_MANY].includes(this.prop.reference)) {
            return false;
        }
        if (this.prop.reference === core_1.ReferenceType.ONE_TO_ONE) {
            return !this.prop.owner;
        }
        return this.prop.reference === core_1.ReferenceType.MANY_TO_MANY;
    }
}
exports.ScalarCriteriaNode = ScalarCriteriaNode;
